// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManager.DB;

#nullable disable

namespace OrderManager.Migrations
{
    [DbContext(typeof(OrderManagerDBContext))]
    partial class OrderManagerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OrderManager.DB.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ClienteId"));

                    b.Property<string>("CodiceCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("longtext");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PartitaIva")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("OrderManager.DB.Ordine", b =>
                {
                    b.Property<long>("OrdineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("OrdineId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("FareFattura")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrdineId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("OrderManager.DB.Prodotto", b =>
                {
                    b.Property<long>("ProdottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ProdottoId"));

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ProdottoId");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("OrderManager.DB.RigaOrdine", b =>
                {
                    b.Property<long>("RigaOrdineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("RigaOrdineId"));

                    b.Property<long?>("OrdineId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProdottoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<string>("UnitaDiMisura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RigaOrdineId");

                    b.HasIndex("OrdineId");

                    b.HasIndex("ProdottoId");

                    b.ToTable("RigheOrdini");
                });

            modelBuilder.Entity("OrderManager.DB.Ordine", b =>
                {
                    b.HasOne("OrderManager.DB.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("OrderManager.DB.RigaOrdine", b =>
                {
                    b.HasOne("OrderManager.DB.Ordine", null)
                        .WithMany("RigheOrdine")
                        .HasForeignKey("OrdineId");

                    b.HasOne("OrderManager.DB.Prodotto", "Prodotto")
                        .WithMany()
                        .HasForeignKey("ProdottoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("OrderManager.DB.Ordine", b =>
                {
                    b.Navigation("RigheOrdine");
                });
#pragma warning restore 612, 618
        }
    }
}
